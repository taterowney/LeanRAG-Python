{
  "train": {
    "FLT": [
      "FLT/DivisionAlgebra/Finiteness.lean",
      "FLT/Deformations/RepresentationTheory/Irreducible.lean",
      "FLT/Mathlib/Topology/Homeomorph.lean",
      "FLT/Mathlib/Topology/Constructions.lean",
      "FLT/Mathlib/Topology/Algebra/Monoid.lean",
      "FLT/Mathlib/Topology/Algebra/Order/Field.lean",
      "FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean",
      "FLT/Mathlib/NumberTheory/NumberField/Completion.lean",
      "FLT/Mathlib/NumberTheory/NumberField/Basic.lean",
      "FLT/Mathlib/RepresentationTheory/Basic.lean",
      "FLT/Mathlib/Data/Fin/Basic.lean",
      "FLT/Mathlib/Data/Finset/Lattice/Fold.lean",
      "FLT/Mathlib/Algebra/Order/Hom/Monoid.lean",
      "FLT/Mathlib/Algebra/Order/AbsoluteValue/Basic.lean",
      "FLT/Mathlib/Algebra/Group/Subgroup/Defs.lean",
      "FLT/Mathlib/Algebra/Module/LinearMap/Defs.lean",
      "FLT/Mathlib/Algebra/Algebra/Bilinear.lean",
      "FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean",
      "FLT/AutomorphicForm/QuaternionAlgebra/FiniteDimensional.lean",
      "FLT/EllipticCurve/Torsion.lean",
      "FLT/GaloisRepresentation/Cyclotomic.lean",
      "FLT/GaloisRepresentation/HardlyRamified.lean",
      "FLT/HIMExperiments/flatness.lean",
      "FLT/Basic/Reductions.lean",
      "FLT/TateCurve/TateCurve.lean",
      "FLT/MathlibExperiments/IsFrobenius.lean",
      "FLT/MathlibExperiments/IsCentralSimple.lean",
      "FLT/MathlibExperiments/Coalgebra/Monoid.lean",
      "FLT/MathlibExperiments/Coalgebra/TensorProduct.lean",
      "FLT/MathlibExperiments/Coalgebra/Sweedler.lean",
      "FLT/MathlibExperiments/HopfAlgebra/Basic.lean",
      "FLT/GroupScheme/FiniteFlat.lean",
      "FLT/GlobalLanglandsConjectures/GLnDefs.lean",
      "FLT/GlobalLanglandsConjectures/GLzero.lean",
      "FLT/NumberField/InfiniteAdeleRing.lean",
      "FLT/NumberField/Completion.lean",
      "FLT/NumberField/Embeddings.lean",
      "FLT/NumberField/AdeleRing.lean",
      "FLT/AutomorphicRepresentation/Example.lean"
    ],
    "Foundation": [
      "Foundation/Propositional/Classical/Basic.lean",
      "Foundation/Propositional/Classical/Basic/Semantics.lean",
      "Foundation/Propositional/Classical/Basic/Calculus.lean",
      "Foundation/Propositional/Classical/Basic/Completeness.lean",
      "Foundation/Propositional/Classical/Basic/Formula.lean",
      "Foundation/Vorspiel/String.lean",
      "Foundation/Vorspiel/Arith.lean",
      "Foundation/Vorspiel/Chain.lean",
      "Foundation/Vorspiel/ExistsUnique.lean",
      "Foundation/Vorspiel/Collection.lean",
      "Foundation/Vorspiel/Order.lean",
      "Foundation/Vorspiel/Meta.lean",
      "Foundation/Vorspiel/Geach.lean",
      "Foundation/Vorspiel/RelItr.lean",
      "Foundation/Vorspiel/NotationClass.lean",
      "Foundation/Vorspiel/BinaryRelations.lean",
      "Foundation/Logic/Semantics.lean",
      "Foundation/Logic/Calculus.lean",
      "Foundation/Logic/System.lean",
      "Foundation/Logic/Disjunctive.lean",
      "Foundation/Logic/LindenbaumAlgebra.lean",
      "Foundation/Logic/Axioms.lean",
      "Foundation/Logic/LogicSymbol.lean",
      "Foundation/Logic/Predicate/Quantifier.lean",
      "Foundation/Logic/Predicate/Language.lean",
      "Foundation/Logic/Predicate/Term.lean",
      "Foundation/Logic/Kripke/Basic.lean",
      "Foundation/Logic/HilbertStyle/Context.lean",
      "Foundation/Logic/HilbertStyle/Lukasiewicz.lean",
      "Foundation/Logic/HilbertStyle/Basic.lean",
      "Foundation/IntFO/Basic.lean",
      "Foundation/IntFO/Basic/Formula.lean",
      "Foundation/IntFO/Basic/Kripke.lean",
      "Foundation/IntFO/Basic/Rew.lean",
      "Foundation/Modal/Formula.lean",
      "Foundation/Modal/Axioms.lean",
      "Foundation/Modal/LogicSymbol.lean",
      "Foundation/Modal/PLoN/Soundness.lean",
      "Foundation/Modal/PLoN/Semantics.lean",
      "Foundation/Modal/PLoN/Completeness.lean",
      "Foundation/Modal/Boxdot/K4_S4.lean",
      "Foundation/Modal/Boxdot/Basic.lean",
      "Foundation/Modal/Boxdot/GL_Grz.lean",
      "Foundation/Modal/System/K5.lean",
      "Foundation/Modal/System/KB.lean",
      "Foundation/Modal/System/Ver.lean",
      "Foundation/Modal/System/GL.lean",
      "Foundation/Modal/System/K4.lean",
      "Foundation/Modal/System/KD.lean",
      "Foundation/Modal/System/S5.lean",
      "Foundation/Modal/System/S4.lean",
      "Foundation/Modal/System/Basic.lean",
      "Foundation/Modal/System/KP.lean",
      "Foundation/Modal/System/KTc.lean",
      "Foundation/Modal/System/S4Dot3.lean",
      "Foundation/Modal/System/S4Dot2.lean",
      "Foundation/Modal/System/Grz.lean",
      "Foundation/Modal/System/K.lean",
      "Foundation/Modal/System/Triv.lean",
      "Foundation/Modal/System/KT.lean",
      "Foundation/Modal/ModalCompanion/ModalCompanion.lean",
      "Foundation/Modal/ModalCompanion/GMT.lean",
      "Foundation/Modal/ModalCompanion/Basic.lean",
      "Foundation/Modal/Hilbert/Systems.lean",
      "Foundation/Modal/Hilbert/ConsistentTheory.lean",
      "Foundation/Modal/Hilbert/Basic.lean",
      "Foundation/Modal/Hilbert/Geach.lean",
      "Foundation/Modal/Hilbert/Subst.lean",
      "Foundation/Modal/Hilbert/Complemental.lean",
      "Foundation/Modal/Hilbert/WeakerThan/K_KD.lean",
      "Foundation/Modal/Hilbert/WeakerThan/KD45_S5.lean",
      "Foundation/Modal/Hilbert/WeakerThan/K4_S4.lean",
      "Foundation/Modal/Hilbert/WeakerThan/GL_GLS.lean",
      "Foundation/Modal/Hilbert/WeakerThan/KTB_S5.lean",
      "Foundation/Modal/Hilbert/WeakerThan/K_K5.lean",
      "Foundation/Modal/Hilbert/WeakerThan/K_KB.lean",
      "Foundation/Modal/Hilbert/WeakerThan/KD4_KD45.lean",
      "Foundation/Modal/Hilbert/WeakerThan/K4_GL.lean",
      "Foundation/Modal/Hilbert/WeakerThan/K4_Triv.lean",
      "Foundation/Modal/Hilbert/WeakerThan/K_K4.lean",
      "Foundation/Modal/Hilbert/WeakerThan/S4_S5.lean",
      "Foundation/Modal/Hilbert/WeakerThan/KD_KT.lean",
      "Foundation/Modal/Hilbert/WeakerThan/K4_Grz.lean",
      "Foundation/Modal/Hilbert/WeakerThan/KT_S4.lean",
      "Foundation/Modal/Hilbert/WeakerThan/KDB_KTB.lean",
      "Foundation/Modal/Hilbert/WeakerThan/KT_KTB.lean",
      "Foundation/Modal/Hilbert/WeakerThan/KT_Grz.lean",
      "Foundation/Modal/Hilbert/WeakerThan/K5_K45.lean",
      "Foundation/Modal/Hilbert/Equiv/KD_KP.lean",
      "Foundation/Modal/Hilbert/Equiv/GL.lean",
      "Foundation/Modal/Hilbert/Equiv/S5Grz_Triv.lean",
      "Foundation/Modal/Hilbert/Equiv/S5_KT4B.lean",
      "Foundation/Modal/Hilbert/Maximal/Unprovability.lean",
      "Foundation/Modal/Hilbert/Maximal/Basic.lean",
      "Foundation/Modal/Kripke/Ver.lean",
      "Foundation/Modal/Kripke/S5.lean",
      "Foundation/Modal/Kripke/Closure.lean",
      "Foundation/Modal/Kripke/Basic.lean",
      "Foundation/Modal/Kripke/Tree.lean",
      "Foundation/Modal/Kripke/Dot3.lean",
      "Foundation/Modal/Kripke/Completeness.lean",
      "Foundation/Modal/Kripke/Filteration.lean",
      "Foundation/Modal/Kripke/ComplexityLimited.lean",
      "Foundation/Modal/Kripke/Kripke.lean",
      "Foundation/Modal/Kripke/Preservation.lean",
      "Foundation/Modal/Kripke/GL/MDP.lean",
      "Foundation/Modal/Kripke/GL/Unnec.lean",
      "Foundation/Modal/Kripke/GL/Tree.lean",
      "Foundation/Modal/Kripke/GL/Completeness.lean",
      "Foundation/Modal/Kripke/GL/Definability.lean",
      "Foundation/Modal/Kripke/Grz/Completeness.lean",
      "Foundation/Modal/Kripke/Geach/Systems.lean",
      "Foundation/IntProp/Formula.lean",
      "Foundation/IntProp/Hilbert/Glivenko.lean",
      "Foundation/IntProp/Hilbert/Basic.lean",
      "Foundation/IntProp/Hilbert/ConsistentTableau.lean",
      "Foundation/IntProp/Dialectica/Basic.lean",
      "Foundation/IntProp/Kripke/LEM.lean",
      "Foundation/IntProp/Kripke/Basic.lean",
      "Foundation/IntProp/Kripke/Completeness.lean",
      "Foundation/IntProp/Kripke/DP.lean",
      "Foundation/IntProp/Kripke/Classical.lean",
      "Foundation/AutoProver/Litform.lean",
      "Foundation/FirstOrder/Basic.lean",
      "Foundation/FirstOrder/Ultraproduct.lean",
      "Foundation/FirstOrder/Interpretation.lean",
      "Foundation/FirstOrder/Order/Le.lean",
      "Foundation/FirstOrder/Basic/Calculus2.lean",
      "Foundation/FirstOrder/Basic/Soundness.lean",
      "Foundation/FirstOrder/Basic/Operator.lean",
      "Foundation/FirstOrder/Basic/Calculus.lean",
      "Foundation/FirstOrder/Basic/Coding.lean",
      "Foundation/FirstOrder/Basic/Model.lean",
      "Foundation/FirstOrder/Basic/Eq.lean",
      "Foundation/FirstOrder/Basic/BinderNotation.lean",
      "Foundation/FirstOrder/Basic/Semantics/Elementary.lean",
      "Foundation/FirstOrder/Basic/Semantics/Semantics.lean",
      "Foundation/FirstOrder/Basic/Syntax/Formula.lean",
      "Foundation/FirstOrder/Basic/Syntax/Rew.lean",
      "Foundation/FirstOrder/Arith/Hierarchy.lean",
      "Foundation/FirstOrder/Arith/StrictHierarchy.lean",
      "Foundation/FirstOrder/Arith/Nonstandard.lean",
      "Foundation/FirstOrder/Arith/Basic.lean",
      "Foundation/FirstOrder/Arith/Model.lean",
      "Foundation/FirstOrder/Arith/CobhamR0.lean",
      "Foundation/FirstOrder/Arith/Representation.lean",
      "Foundation/FirstOrder/Arith/PeanoMinus.lean",
      "Foundation/FirstOrder/Arith/Theory.lean",
      "Foundation/FirstOrder/Completeness/Coding.lean",
      "Foundation/FirstOrder/Completeness/SearchTree.lean",
      "Foundation/FirstOrder/Completeness/Corollaries.lean",
      "Foundation/FirstOrder/Completeness/Completeness.lean",
      "Foundation/FirstOrder/Completeness/SubLanguage.lean"
    ],
    "PhysLean": [
      "PhysLean/Relativity/Bispinors/Basic.lean",
      "PhysLean/Relativity/Tensors/OfInt.lean",
      "PhysLean/Relativity/Tensors/UnitTensor.lean",
      "PhysLean/Relativity/Tensors/Product.lean",
      "PhysLean/Relativity/Tensors/Evaluation.lean",
      "PhysLean/Relativity/Tensors/MetricTensor.lean",
      "PhysLean/Relativity/Tensors/Basic.lean",
      "PhysLean/Relativity/Tensors/Elab.lean",
      "PhysLean/Relativity/Tensors/Constructors.lean",
      "PhysLean/Relativity/Tensors/Dual.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/OfRat.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Lemmas.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Basic.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Metrics/Lemmas.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Metrics/Pre.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Metrics/Basic.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Weyl/Two.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Weyl/Metric.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Weyl/Unit.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Weyl/Modules.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Weyl/Basic.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Weyl/Contraction.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Units/Pre.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Units/Symm.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Units/Basic.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Vector/Pre/Modules.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Vector/Pre/Basic.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Vector/Pre/Contraction.lean",
      "PhysLean/Relativity/Tensors/ComplexTensor/Matrix/Pre.lean",
      "PhysLean/Relativity/Tensors/Color/Discrete.lean",
      "PhysLean/Relativity/Tensors/Color/Basic.lean",
      "PhysLean/Relativity/Tensors/Color/Lift.lean",
      "PhysLean/Relativity/Tensors/TensorSpecies/Basic.lean",
      "PhysLean/Relativity/Tensors/Contraction/Products.lean",
      "PhysLean/Relativity/Tensors/Contraction/Basic.lean",
      "PhysLean/Relativity/Tensors/Contraction/Pure.lean",
      "PhysLean/Relativity/Tensors/Contraction/Basis.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Basic.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Derivative.lean",
      "PhysLean/Relativity/Tensors/RealTensor/ToComplex.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Metrics/Pre.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Metrics/Basic.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Units/Pre.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Vector/Boosts.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Vector/Basic.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Vector/Causality/Basic.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Vector/Causality/TimeLike.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Vector/Causality/LightLike.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Vector/Pre/NormOne.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Vector/Pre/Modules.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Vector/Pre/Basic.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Vector/Pre/Contraction.lean",
      "PhysLean/Relativity/Tensors/RealTensor/Matrix/Pre.lean",
      "PhysLean/Relativity/Special/TwinParadox/Basic.lean",
      "PhysLean/Relativity/Lorentz/MinkowskiMatrix.lean",
      "PhysLean/Relativity/Lorentz/Group/Rotations.lean",
      "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "PhysLean/Relativity/Lorentz/Group/Basic.lean",
      "PhysLean/Relativity/Lorentz/Group/Proper.lean",
      "PhysLean/Relativity/Lorentz/Group/Orthochronous.lean",
      "PhysLean/Relativity/Lorentz/Group/Boosts/Basic.lean",
      "PhysLean/Relativity/Lorentz/Group/Boosts/Generalized.lean",
      "PhysLean/Relativity/Lorentz/Algebra/Basic.lean",
      "PhysLean/Relativity/Lorentz/Algebra/Basis.lean",
      "PhysLean/Relativity/PauliMatrices/Matrix.lean",
      "PhysLean/Relativity/PauliMatrices/SelfAdjoint.lean",
      "PhysLean/Relativity/PauliMatrices/Basic.lean",
      "PhysLean/Relativity/PauliMatrices/AsTensor.lean",
      "PhysLean/Relativity/PauliMatrices/Relations.lean",
      "PhysLean/Relativity/PauliMatrices/CliffordAlgebra.lean",
      "PhysLean/Relativity/SL2C/Basic.lean",
      "PhysLean/Relativity/SpaceTime/TimeSlice.lean",
      "PhysLean/Relativity/SpaceTime/Basic.lean",
      "PhysLean/Relativity/SpaceTime/CliffordAlgebra.lean",
      "PhysLean/Relativity/SpaceTime/ProperTime.lean",
      "PhysLean/QuantumMechanics/FiniteTarget/Basic.lean",
      "PhysLean/QuantumMechanics/FiniteTarget/HilbertSpace.lean",
      "PhysLean/QuantumMechanics/OneDimension/HilbertSpace/Basic.lean",
      "PhysLean/QuantumMechanics/OneDimension/HilbertSpace/Parity.lean",
      "PhysLean/QuantumMechanics/OneDimension/GeneralPotential/Basic.lean",
      "PhysLean/QuantumMechanics/OneDimension/HarmonicOscillator/Eigenfunction.lean",
      "PhysLean/QuantumMechanics/OneDimension/HarmonicOscillator/Basic.lean",
      "PhysLean/QuantumMechanics/OneDimension/HarmonicOscillator/TISE.lean",
      "PhysLean/QuantumMechanics/OneDimension/HarmonicOscillator/Completeness.lean",
      "PhysLean/QFT/AnomalyCancellation/Basic.lean",
      "PhysLean/QFT/AnomalyCancellation/GroupActions.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/Sorts.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/Permutations.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/LineInPlaneCond.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/Basic.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/ConstAbs.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/BasisLinear.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/VectorLike.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/Even/Parameterization.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/Even/BasisLinear.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/Even/LineInCubic.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/Odd/Parameterization.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/Odd/BasisLinear.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/Odd/LineInCubic.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/LowDim/Two.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/LowDim/Three.lean",
      "PhysLean/QFT/QED/AnomalyCancellation/LowDim/One.lean",
      "PhysLean/QFT/PerturbationTheory/FieldSpecification/NormalOrder.lean",
      "PhysLean/QFT/PerturbationTheory/FieldSpecification/CrAnFieldOp.lean",
      "PhysLean/QFT/PerturbationTheory/FieldSpecification/Basic.lean",
      "PhysLean/QFT/PerturbationTheory/FieldSpecification/CrAnSection.lean",
      "PhysLean/QFT/PerturbationTheory/FieldSpecification/TimeOrder.lean",
      "PhysLean/QFT/PerturbationTheory/Koszul/KoszulSignInsert.lean",
      "PhysLean/QFT/PerturbationTheory/WickContraction/Card.lean",
      "PhysLean/QFT/PerturbationTheory/WickContraction/Perm.lean",
      "PhysLean/QFT/PerturbationTheory/WickContraction/Uncontracted.lean",
      "PhysLean/QFT/PerturbationTheory/WickContraction/IsFull.lean",
      "PhysLean/QFT/PerturbationTheory/WickContraction/TimeContract.lean",
      "PhysLean/QFT/PerturbationTheory/WickContraction/StaticContract.lean",
      "PhysLean/QFT/PerturbationTheory/WickContraction/Erase.lean",
      "PhysLean/QFT/PerturbationTheory/WickContraction/Involutions.lean",
      "PhysLean/QFT/PerturbationTheory/WickContraction/Sign/InsertSome.lean",
      "PhysLean/QFT/PerturbationTheory/WickContraction/Sign/Basic.lean",
      "PhysLean/QFT/PerturbationTheory/FieldStatistics/ExchangeSign.lean",
      "PhysLean/QFT/PerturbationTheory/FieldStatistics/OfFinset.lean",
      "PhysLean/QFT/PerturbationTheory/FeynmanDiagrams/Basic.lean",
      "PhysLean/QFT/PerturbationTheory/FieldOpFreeAlgebra/NormalOrder.lean",
      "PhysLean/QFT/PerturbationTheory/FieldOpFreeAlgebra/SuperCommute.lean",
      "PhysLean/QFT/PerturbationTheory/WickAlgebra/WicksTheoremNormal.lean",
      "PhysLean/QFT/PerturbationTheory/WickAlgebra/WickTerm.lean",
      "PhysLean/QFT/PerturbationTheory/WickAlgebra/Universality.lean",
      "PhysLean/QFT/PerturbationTheory/WickAlgebra/StaticWickTheorem.lean",
      "PhysLean/QFT/PerturbationTheory/WickAlgebra/TimeContraction.lean",
      "PhysLean/QFT/PerturbationTheory/WickAlgebra/StaticWickTerm.lean",
      "PhysLean/QFT/PerturbationTheory/WickAlgebra/WicksTheorem.lean",
      "PhysLean/QFT/PerturbationTheory/WickAlgebra/NormalOrder/WickContractions.lean",
      "PhysLean/Electromagnetism/Wave.lean",
      "PhysLean/Electromagnetism/LorentzAction.lean",
      "PhysLean/Electromagnetism/Basic.lean",
      "PhysLean/Electromagnetism/MaxwellEquations.lean",
      "PhysLean/Electromagnetism/Homogeneous.lean",
      "PhysLean/Electromagnetism/FieldStrength/Basic.lean",
      "PhysLean/Electromagnetism/FieldStrength/Derivative.lean",
      "PhysLean/Mathematics/RatComplexNum.lean",
      "PhysLean/Mathematics/Fin.lean",
      "PhysLean/Mathematics/PiTensorProduct.lean",
      "PhysLean/Mathematics/List.lean",
      "PhysLean/Mathematics/FDerivCurry.lean",
      "PhysLean/Mathematics/LinearMaps.lean",
      "PhysLean/Mathematics/SchurTriangulation.lean",
      "PhysLean/Mathematics/DataStructures/FourTree/UniqueMap.lean",
      "PhysLean/Mathematics/DataStructures/FourTree/Basic.lean",
      "PhysLean/Mathematics/SO3/Basic.lean",
      "PhysLean/Mathematics/SpecialFunctions/PhysHermite.lean",
      "PhysLean/Mathematics/List/InsertIdx.lean",
      "PhysLean/Mathematics/List/InsertionSort.lean",
      "PhysLean/Mathematics/Geometry/Metric/Riemannian/Defs.lean",
      "PhysLean/Mathematics/Geometry/Metric/PseudoRiemannian/Defs.lean",
      "PhysLean/Thermodynamics/Basic.lean",
      "PhysLean/Particles/FlavorPhysics/CKMMatrix/Rows.lean",
      "PhysLean/Particles/FlavorPhysics/CKMMatrix/Basic.lean",
      "PhysLean/Particles/FlavorPhysics/CKMMatrix/Relations.lean",
      "PhysLean/Particles/FlavorPhysics/CKMMatrix/PhaseFreedom.lean",
      "PhysLean/Particles/FlavorPhysics/CKMMatrix/Invariants.lean",
      "PhysLean/Particles/FlavorPhysics/CKMMatrix/StandardParameterization/Basic.lean",
      "PhysLean/Particles/FlavorPhysics/CKMMatrix/StandardParameterization/StandardParameters.lean",
      "PhysLean/Particles/StandardModel/Basic.lean",
      "PhysLean/Particles/StandardModel/Representations.lean",
      "PhysLean/Particles/StandardModel/HiggsBoson/Potential.lean",
      "PhysLean/Particles/StandardModel/HiggsBoson/Basic.lean",
      "PhysLean/Particles/StandardModel/HiggsBoson/PointwiseInnerProd.lean",
      "PhysLean/Particles/StandardModel/HiggsBoson/GaugeAction.lean",
      "PhysLean/Particles/StandardModel/AnomalyCancellation/Permutations.lean",
      "PhysLean/Particles/StandardModel/AnomalyCancellation/Basic.lean",
      "PhysLean/Particles/StandardModel/AnomalyCancellation/FamilyMaps.lean",
      "PhysLean/Particles/StandardModel/AnomalyCancellation/NoGrav/Basic.lean",
      "PhysLean/Particles/StandardModel/AnomalyCancellation/NoGrav/One/Lemmas.lean",
      "PhysLean/Particles/StandardModel/AnomalyCancellation/NoGrav/One/LinearParameterization.lean",
      "PhysLean/Particles/BeyondTheStandardModel/PatiSalam/Basic.lean",
      "PhysLean/Particles/BeyondTheStandardModel/Spin10/Basic.lean",
      "PhysLean/Particles/BeyondTheStandardModel/GeorgiGlashow/Basic.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/Permutations.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/Basic.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/FamilyMaps.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/Ordinary/DimSevenPlane.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/Ordinary/Basic.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/Ordinary/FamilyMaps.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/NoGrav/Basic.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/PlusU1/BMinusL.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/PlusU1/QuadSolToSol.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/PlusU1/PlaneNonSols.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/PlusU1/Basic.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/PlusU1/HyperCharge.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/PlusU1/QuadSol.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/PlusU1/BoundPlaneDim.lean",
      "PhysLean/Particles/BeyondTheStandardModel/RHN/AnomalyCancellation/PlusU1/FamilyMaps.lean",
      "PhysLean/Particles/BeyondTheStandardModel/TwoHDM/GaugeOrbits.lean",
      "PhysLean/Particles/BeyondTheStandardModel/TwoHDM/Basic.lean",
      "PhysLean/Particles/SuperSymmetry/SU5/Potential.lean",
      "PhysLean/Particles/SuperSymmetry/SU5/FieldLabels.lean",
      "PhysLean/Particles/SuperSymmetry/SU5/Charges/OfPotentialTerm.lean",
      "PhysLean/Particles/SuperSymmetry/SU5/Charges/PhenoConstrained.lean",
      "PhysLean/Particles/SuperSymmetry/SU5/Charges/Completions.lean",
      "PhysLean/Particles/SuperSymmetry/SU5/Charges/Basic.lean",
      "PhysLean/Particles/SuperSymmetry/SU5/Charges/Tree.lean",
      "PhysLean/Particles/SuperSymmetry/SU5/Charges/OfFieldLabel.lean",
      "PhysLean/Particles/SuperSymmetry/SU5/Charges/AllowsTerm.lean",
      "PhysLean/Particles/SuperSymmetry/SU5/Charges/MinimallyAllowsTerm/Basic.lean",
      "PhysLean/Particles/SuperSymmetry/SU5/Charges/MinimallyAllowsTerm/OfFinset.lean",
      "PhysLean/Particles/SuperSymmetry/MSSMNu/AnomalyCancellation/Permutations.lean",
      "PhysLean/Particles/SuperSymmetry/MSSMNu/AnomalyCancellation/Basic.lean",
      "PhysLean/Particles/SuperSymmetry/MSSMNu/AnomalyCancellation/LineY3B3.lean",
      "PhysLean/Particles/SuperSymmetry/MSSMNu/AnomalyCancellation/HyperCharge.lean",
      "PhysLean/Particles/SuperSymmetry/MSSMNu/AnomalyCancellation/Y3.lean",
      "PhysLean/Particles/SuperSymmetry/MSSMNu/AnomalyCancellation/B3.lean",
      "PhysLean/Particles/SuperSymmetry/MSSMNu/AnomalyCancellation/OrthogY3B3/PlaneWithY3B3.lean",
      "PhysLean/Particles/SuperSymmetry/MSSMNu/AnomalyCancellation/OrthogY3B3/Basic.lean",
      "PhysLean/Particles/SuperSymmetry/MSSMNu/AnomalyCancellation/OrthogY3B3/ToSols.lean",
      "PhysLean/StringTheory/Basic.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Basic.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Charges/OfRationalSection.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Charges/PhenoConstrained/Completeness.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Charges/PhenoConstrained/Elems/PhenoInsertQ10.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Charges/PhenoConstrained/Elems/NextToNearestNeighbor.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Charges/PhenoConstrained/Elems/Card.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Charges/PhenoConstrained/Elems/Lemmas.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Charges/PhenoConstrained/Elems/IsComplete.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Charges/PhenoConstrained/Elems/PhenoInsertQ5.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Charges/PhenoConstrained/Elems/PhenoConstrained.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Charges/PhenoConstrained/Elems/NearestNeighbor.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Charges/PhenoConstrained/Elems/Basic.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Charges/PhenoConstrained/Elems/Same.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Fluxes/Basic.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Fluxes/NoExotics/Elems.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Fluxes/NoExotics/ToList.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Fluxes/NoExotics/Completeness.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Fluxes/NoExotics/ChiralIndices.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Quanta/YukawaRegeneration.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Quanta/Basic.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Quanta/FromParts.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Quanta/ToList.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Quanta/AnomalyCancellation.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Quanta/IsViable/Cases.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Quanta/IsViable/Elems.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Quanta/IsViable/Basic.lean",
      "PhysLean/StringTheory/FTheory/SU5U1/Quanta/IsViable/Completeness.lean",
      "PhysLean/Cosmology/Basic.lean",
      "PhysLean/Cosmology/FLRW/Basic.lean",
      "PhysLean/StatisticalMechanics/Temperature.lean",
      "PhysLean/StatisticalMechanics/BoltzmannConstant.lean",
      "PhysLean/StatisticalMechanics/CanonicalEnsemble/Basic.lean",
      "PhysLean/StatisticalMechanics/CanonicalEnsemble/TwoState.lean",
      "PhysLean/CondensedMatter/Basic.lean",
      "PhysLean/CondensedMatter/TightBindingChain/Basic.lean",
      "PhysLean/Optics/Basic.lean",
      "PhysLean/Optics/Polarization/Basic.lean",
      "PhysLean/ClassicalMechanics/Basic.lean",
      "PhysLean/ClassicalMechanics/VectorFields.lean",
      "PhysLean/ClassicalMechanics/Momentum/Basic.lean",
      "PhysLean/ClassicalMechanics/Time/Basic.lean",
      "PhysLean/ClassicalMechanics/HarmonicOscillator/Basic.lean",
      "PhysLean/ClassicalMechanics/HarmonicOscillator/Solution.lean",
      "PhysLean/ClassicalMechanics/WaveEquation/Basic.lean",
      "PhysLean/ClassicalMechanics/WaveEquation/HarmonicWave.lean",
      "PhysLean/ClassicalMechanics/Space/VectorIdentities.lean",
      "PhysLean/ClassicalMechanics/Space/Basic.lean"
    ],
    "Seymour": [
      "Seymour/EasyDirection.lean",
      "Seymour/HardDirection.lean",
      "Seymour/Matroid/Classes/Regular.lean",
      "Seymour/Matroid/Classes/Binary.lean",
      "Seymour/Matroid/Classes/Representable.lean",
      "Seymour/Matroid/Operations/Sum2/Properties.lean",
      "Seymour/Matroid/Operations/SumDelta/SpecialCase2Sum.lean",
      "Seymour/Matroid/Operations/SumDelta/SpecialCase3Sum.lean",
      "Seymour/Matroid/Operations/SumDelta/SpecialCase1Sum.lean",
      "Seymour/Matroid/Operations/SumDelta/MatrixCharacterization.lean",
      "Seymour/Matroid/Operations/Sum1/Basic.lean",
      "Seymour/Matroid/Operations/MatrixSums/Sum1.lean",
      "Seymour/Matroid/Operations/MatrixSums/ZZZ.lean",
      "Seymour/Matroid/Operations/MatrixSums/Sum2.lean",
      "Seymour/Matroid/Constructors/ConcreteInstances.lean",
      "Seymour/Matroid/Constructors/CircuitMatroid.lean",
      "Seymour/ForMathlib/MatrixPivot.lean",
      "Seymour/ForMathlib/Basic.lean",
      "Seymour/ForMathlib/FunctionDecompose.lean",
      "Seymour/Computable/MatrixTU.lean"
    ],
    "Carleson": [
      "Carleson/MinLayerTiles.lean",
      "Carleson/TileExistence.lean",
      "Carleson/HolderVanDerCorput.lean",
      "Carleson/LinearizedMetricCarleson.lean",
      "Carleson/FinitaryCarleson.lean",
      "Carleson/MetricCarleson.lean",
      "Carleson/Forest.lean",
      "Carleson/TileStructure.lean",
      "Carleson/ToMathlib/MeasureReal.lean",
      "Carleson/ToMathlib/DoublingMeasure.lean",
      "Carleson/ToMathlib/ENorm.lean",
      "Carleson/ToMathlib/HardyLittlewood.lean",
      "Carleson/ToMathlib/CoverByBalls.lean",
      "Carleson/ToMathlib/MinLayer.lean",
      "Carleson/ToMathlib/Analysis/Convex/SpecificFunctions/Basic.lean",
      "Carleson/ToMathlib/MeasureTheory/Integral/SetIntegral.lean",
      "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "Carleson/TwoSidedCarleson/MainTheorem.lean",
      "Carleson/Discrete/SumEstimates.lean",
      "Carleson/Discrete/Defs.lean",
      "Carleson/Discrete/ExceptionalSet.lean",
      "Carleson/Discrete/MainTheorem.lean",
      "Carleson/Classical/VanDerCorput.lean",
      "Carleson/Classical/Approximation.lean",
      "Carleson/Classical/Helper.lean",
      "Carleson/Classical/DirichletKernel.lean",
      "Carleson/Classical/Basic.lean",
      "Carleson/Classical/HilbertKernel.lean",
      "Carleson/Classical/ControlApproximationEffect.lean",
      "Carleson/Classical/SpectralProjectionBound.lean",
      "Carleson/Classical/CarlesonOnTheRealLine.lean",
      "Carleson/Classical/CarlesonOperatorReal.lean",
      "Carleson/Classical/ClassicalCarleson.lean",
      "Carleson/ForestOperator/LargeSeparation.lean",
      "Carleson/ForestOperator/QuantativeEstimate.lean",
      "Carleson/ForestOperator/AlmostOrthogonality.lean",
      "Carleson/ForestOperator/RemainingTiles.lean",
      "Carleson/Antichain/TileCorrelation.lean",
      "Carleson/Antichain/AntichainTileCount.lean",
      "Carleson/Antichain/AntichainOperator.lean"
    ],
    "ConNF": [
      "ConNF/Background/PermutativeExtension.lean",
      "ConNF/Background/Rel.lean",
      "ConNF/Background/ReflTransGen.lean",
      "ConNF/Background/WellOrder.lean",
      "ConNF/Background/Set.lean",
      "ConNF/Background/Ordinal.lean",
      "ConNF/Background/Transfer.lean",
      "ConNF/Background/Cardinal.lean",
      "ConNF/Background/InductiveConstruction.lean",
      "ConNF/Counting/Twist.lean",
      "ConNF/Counting/Recode.lean",
      "ConNF/Counting/Conclusions.lean",
      "ConNF/Counting/BaseCounting.lean",
      "ConNF/Counting/BaseCoding.lean",
      "ConNF/Counting/CountSupportOrbit.lean",
      "ConNF/Position/Deny.lean",
      "ConNF/Position/BasePositions.lean",
      "ConNF/Position/Position.lean",
      "ConNF/Strong/CodingFunction.lean",
      "ConNF/Strong/SpecSame.lean",
      "ConNF/Strong/Spec.lean",
      "ConNF/Strong/SMulSpec.lean",
      "ConNF/FOA/StrApproxFOA.lean",
      "ConNF/FOA/StrActionFOA.lean",
      "ConNF/FOA/BaseAction.lean",
      "ConNF/FOA/Inflexible.lean",
      "ConNF/FOA/Coherent.lean",
      "ConNF/FOA/FlexApprox.lean",
      "ConNF/FOA/StrAction.lean",
      "ConNF/FOA/StrApprox.lean",
      "ConNF/FOA/BaseApprox.lean",
      "ConNF/Model/ConstructMotive.lean",
      "ConNF/Model/ConstructHypothesis.lean",
      "ConNF/Model/RunInduction.lean",
      "ConNF/Model/InductionStatement.lean",
      "ConNF/Construction/NewModelData.lean",
      "ConNF/Construction/Code.lean",
      "ConNF/External/Counting.lean",
      "ConNF/Levels/Tree.lean",
      "ConNF/Levels/StrPerm.lean",
      "ConNF/Levels/StrSet.lean",
      "ConNF/ModelData/Fuzz.lean",
      "ConNF/ModelData/Level.lean",
      "ConNF/ModelData/CoherentData.lean",
      "ConNF/ModelData/Enumeration.lean",
      "ConNF/ModelData/ModelData.lean",
      "ConNF/Base/TypeIndex.lean",
      "ConNF/Base/Litter.lean",
      "ConNF/Base/Atom.lean",
      "ConNF/Base/Small.lean",
      "ConNF/Base/NearLitter.lean",
      "ConNF/Base/BasePerm.lean",
      "ConNF/Base/Params.lean"
    ],
    "Mathlib": [
      "Mathlib/Geometry/Euclidean/Sphere/Ptolemy.lean",
      "Mathlib/NumberTheory/Transcendental/Liouville/Basic.lean",
      "Mathlib/Algebra/Order/Group/Cone.lean",
      "Mathlib/Geometry/Manifold/IntegralCurve/Basic.lean",
      "Mathlib/RingTheory/Bialgebra/TensorProduct.lean",
      "Mathlib/RingTheory/Spectrum/Prime/Polynomial.lean",
      "Mathlib/RingTheory/IntegralClosure/Algebra/Basic.lean",
      "Mathlib/NumberTheory/LegendreSymbol/JacobiSymbol.lean",
      "Mathlib/Analysis/NormedSpace/ConformalLinearMap.lean",
      "Mathlib/Algebra/Homology/HomologicalComplexBiprod.lean",
      "Mathlib/CategoryTheory/Abelian/Projective/Resolution.lean",
      "Mathlib/CategoryTheory/Localization/Triangulated.lean",
      "Mathlib/Algebra/Algebra/Subalgebra/Unitization.lean",
      "Mathlib/Analysis/Normed/Affine/ContinuousAffineMap.lean",
      "Mathlib/Algebra/EuclideanDomain/Defs.lean",
      "Mathlib/Algebra/Ring/Subring/Units.lean",
      "Mathlib/GroupTheory/GroupAction/Quotient.lean",
      "Mathlib/CategoryTheory/Limits/Cones.lean",
      "Mathlib/MeasureTheory/Decomposition/Lebesgue.lean",
      "Mathlib/Algebra/Category/ModuleCat/Differentials/Basic.lean",
      "Mathlib/FieldTheory/PurelyInseparable/PerfectClosure.lean",
      "Mathlib/SetTheory/ZFC/Rank.lean",
      "Mathlib/Algebra/Polynomial/Eval/Degree.lean",
      "Mathlib/Algebra/HierarchyDesign.lean",
      "Mathlib/Algebra/Order/Archimedean/IndicatorCard.lean",
      "Mathlib/AlgebraicGeometry/Stalk.lean",
      "Mathlib/Algebra/Order/Module/Algebra.lean",
      "Mathlib/Analysis/InnerProductSpace/Positive.lean",
      "Mathlib/Algebra/Order/GroupWithZero/Canonical.lean",
      "Mathlib/Algebra/GCDMonoid/Multiset.lean",
      "Mathlib/CategoryTheory/Sites/Coherent/CoherentTopology.lean",
      "Mathlib/Geometry/Manifold/ContMDiff/Atlas.lean",
      "Mathlib/Geometry/Manifold/Algebra/LeftInvariantDerivation.lean",
      "Mathlib/RingTheory/Ideal/IsPrincipalPowQuotient.lean",
      "Mathlib/Geometry/Euclidean/Angle/Oriented/Affine.lean",
      "Mathlib/Topology/ContinuousMap/CompactlySupported.lean",
      "Mathlib/Algebra/Order/Archimedean/Submonoid.lean",
      "Mathlib/Topology/Compactness/Lindelof.lean"
    ]
  },
  "test": {
    "FLT": [
      {
        "file": "FLT/Mathlib/Topology/Algebra/UniformRing.lean",
        "theorems": [
          "UniformSpace.Completion.mapRingHom_apply"
        ]
      },
      {
        "file": "FLT/Mathlib/LinearAlgebra/Determinant.lean",
        "theorems": [
          "LinearMap.det_mul"
        ]
      },
      {
        "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
        "theorems": [
          "IsDedekindDomain.HeightOneSpectrum.adicValued.continuous_algebraMap"
        ]
      },
      {
        "file": "FLT/Mathlib/Algebra/Algebra/Hom.lean",
        "theorems": [
          "SemialgHom.map_smul"
        ]
      },
      {
        "file": "FLT/Mathlib/NumberTheory/Padics/PadicIntegers.lean",
        "theorems": [
          "PadicInt.closure_nonZeroDivisors_padicInt"
        ]
      },
      {
        "file": "FLT/HaarMeasure/DistribHaarChar/Padic.lean",
        "theorems": [
          "distribHaarChar_padic_padicInt"
        ]
      },
      {
        "file": "FLT/Mathlib/NumberTheory/Padics/PadicIntegers.lean",
        "theorems": [
          "PadicInt.nnnorm_units"
        ]
      },
      {
        "file": "FLT/Mathlib/Topology/Algebra/UniformRing.lean",
        "theorems": [
          "UniformSpace.Completion.mapRingHom_coe"
        ]
      },
      {
        "file": "FLT/Mathlib/LinearAlgebra/Span/Defs.lean",
        "theorems": [
          "Submodule.coe_sup'"
        ]
      },
      {
        "file": "FLT/Mathlib/Analysis/Normed/Ring/WithAbs.lean",
        "theorems": [
          "WithAbs.uniformContinuous_algebraMap"
        ]
      },
      {
        "file": "FLT/HaarMeasure/DistribHaarChar/Padic.lean",
        "theorems": [
          "distribHaarChar_padicInt"
        ]
      },
      {
        "file": "FLT/HaarMeasure/MeasurableSpacePadics.lean",
        "theorems": [
          "PadicInt.volume_univ"
        ]
      },
      {
        "file": "FLT/HaarMeasure/DistribHaarChar/RealComplex.lean",
        "theorems": [
          "distribHaarChar_real"
        ]
      },
      {
        "file": "FLT/HaarMeasure/DistribHaarChar/Basic.lean",
        "theorems": [
          "MeasureTheory.Measure.distribHaarChar_pos"
        ]
      },
      {
        "file": "FLT/Mathlib/MeasureTheory/Group/Action.lean",
        "theorems": [
          "MeasureTheory.index_mul_haar_subgroup_eq_haar_subgroup"
        ]
      },
      {
        "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
        "theorems": [
          "IsDedekindDomain.HeightOneSpectrum.tensorAdicCompletionComapAlgHom_tmul_apply"
        ]
      },
      {
        "file": "FLT/Mathlib/Analysis/Normed/Ring/WithAbs.lean",
        "theorems": [
          "WithAbs.norm_eq_abs"
        ]
      },
      {
        "file": "FLT/Mathlib/Algebra/Algebra/Pi.lean",
        "theorems": [
          "Pi.semialgHom_apply"
        ]
      },
      {
        "file": "FLT/Mathlib/GroupTheory/Index.lean",
        "theorems": [
          "AddSubgroup.index_smul"
        ]
      },
      {
        "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
        "theorems": [
          "IsDedekindDomain.HeightOneSpectrum.adicCompletionComapSemialgHom_coe"
        ]
      },
      {
        "file": "FLT/HaarMeasure/DistribHaarChar/RealComplex.lean",
        "theorems": [
          "Complex.volume_complex_smul"
        ]
      },
      {
        "file": "FLT/HaarMeasure/DistribHaarChar/Basic.lean",
        "theorems": [
          "MeasureTheory.Measure.distribHaarChar_eq_of_measure_smul_eq_mul"
        ]
      },
      {
        "file": "FLT/Mathlib/Algebra/Algebra/Hom.lean",
        "theorems": [
          "SemialgHom.commutes"
        ]
      },
      {
        "file": "FLT/HaarMeasure/DistribHaarChar/RealComplex.lean",
        "theorems": [
          "distribHaarChar_complex"
        ]
      },
      {
        "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
        "theorems": [
          "IsDedekindDomain.HeightOneSpectrum.range_adicCompletionComapAlgIso_tensorAdicCompletionIntegersTo_le_pi"
        ]
      },
      {
        "file": "FLT/Mathlib/NumberTheory/Padics/PadicIntegers.lean",
        "theorems": [
          "PadicInt.image_coe_smul_set"
        ]
      },
      {
        "file": "FLT/Mathlib/Topology/Constructions.lean",
        "theorems": [
          "DenseRange.piMap"
        ]
      },
      {
        "file": "FLT/Deformations/RepresentationTheory/Subrepresentation.lean",
        "theorems": [
          "Subrepresentation.toSubmodule_inf"
        ]
      },
      {
        "file": "FLT/HaarMeasure/MeasurableSpacePadics.lean",
        "theorems": [
          "PadicInt.isMeasurableEmbedding_coe"
        ]
      },
      {
        "file": "FLT/Mathlib/NumberTheory/Padics/PadicIntegers.lean",
        "theorems": [
          "PadicInt.nnnorm_p"
        ]
      },
      {
        "file": "FLT/Mathlib/Algebra/Algebra/Hom.lean",
        "theorems": [
          "SemialgHom.toLinearMap_eq_coe"
        ]
      },
      {
        "file": "FLT/HaarMeasure/DomMulActMeasure.lean",
        "theorems": [
          "MeasureTheory.Measure.domSMul_apply"
        ]
      },
      {
        "file": "FLT/Mathlib/NumberTheory/Padics/PadicIntegers.lean",
        "theorems": [
          "PadicInt.nnnorm_pow"
        ]
      },
      {
        "file": "FLT/HaarMeasure/DistribHaarChar/Padic.lean",
        "theorems": [
          "Padic.volume_padic_smul"
        ]
      }
    ],
    "foundation": [
      {
        "file": "Foundation/IntFO/Basic/Deduction.lean",
        "theorems": [
          "LO.FirstOrder.HilbertProofᵢ.depth_all₁"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/WeakerThan/K4_K45.lean",
        "theorems": [
          "LO.Modal.Hilbert.K4_weakerThan_K45"
        ]
      },
      {
        "file": "Foundation/IntFO/Basic/Deduction.lean",
        "theorems": [
          "LO.FirstOrder.HilbertProofᵢ.depth_cast"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/GL_Independency.lean",
        "theorems": [
          "LO.Modal.Hilbert.GL.unprovable_not_higherIndependency_of_consistency"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/WeakerThan/KB_KDB.lean",
        "theorems": [
          "LO.Modal.Hilbert.KB_strictlyWeakerThan_KDB"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/WeakerThan/KB5_S5.lean",
        "theorems": [
          "LO.Modal.Hilbert.KB5_strictlyWeakerThan_S5"
        ]
      },
      {
        "file": "Foundation/Vorspiel/Vorspiel.lean",
        "theorems": [
          "List.Vector.get_one"
        ]
      },
      {
        "file": "Foundation/IntFO/Basic/Deduction.lean",
        "theorems": [
          "LO.FirstOrder.HilbertProofᵢ.depth_ex₁"
        ]
      },
      {
        "file": "Foundation/IntFO/Basic/Deduction.lean",
        "theorems": [
          "LO.FirstOrder.HilbertProofᵢ.depth_mdp"
        ]
      },
      {
        "file": "Foundation/Modal/IntProp.lean",
        "theorems": [
          "LO.IntProp.Formula.toModalFormula.def_or"
        ]
      },
      {
        "file": "Foundation/IntFO/Basic/Deduction.lean",
        "theorems": [
          "LO.FirstOrder.HilbertProofᵢ.depth_and₃"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/WeakerThan/K5_KD5.lean",
        "theorems": [
          "LO.Modal.Hilbert.K5_strictlyWeakerThan_KD5"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/WeakerThan/KD_KDB.lean",
        "theorems": [
          "LO.Modal.Hilbert.KD_weakerThan_KDB"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/WeakerThan/KB5_S5.lean",
        "theorems": [
          "LO.Modal.Hilbert.KB5_weakerThan_S5"
        ]
      },
      {
        "file": "Foundation/Logic/Predicate/Rew.lean",
        "theorems": [
          "LO.FirstOrder.Rew.substs_bv"
        ]
      },
      {
        "file": "Foundation/IntProp/Heyting/Semantics.lean",
        "theorems": [
          "LO.IntProp.Formula.hVal_neg"
        ]
      },
      {
        "file": "Foundation/Modal/Kripke/Geach/Basic.lean",
        "theorems": [
          "LO.Modal.Kripke.TransitiveEuclideanFrameClass.is_geach"
        ]
      },
      {
        "file": "Foundation/Modal/NNFormula.lean",
        "theorems": [
          "LO.Modal.Formula.toNNFormula_atom"
        ]
      },
      {
        "file": "Foundation/FirstOrder/Hauptsatz.lean",
        "theorems": [
          "LO.FirstOrder.Derivation.isCutFree_wk_iff"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/WeakerThan/KB_KDB.lean",
        "theorems": [
          "LO.Modal.Hilbert.KB_weakerThan_KDB"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/WeakerThan/K4_KD4.lean",
        "theorems": [
          "LO.Modal.Hilbert.K4_weakerThan_KD4"
        ]
      },
      {
        "file": "Foundation/FirstOrder/Hauptsatz.lean",
        "theorems": [
          "LO.FirstOrder.Derivation.isCutFree_all_iff"
        ]
      },
      {
        "file": "Foundation/Logic/Predicate/Rew.lean",
        "theorems": [
          "LO.FirstOrder.LawfulSyntacticRewriting.rewrite_substs_nil"
        ]
      },
      {
        "file": "Foundation/IntFO/Basic/Deduction.lean",
        "theorems": [
          "LO.FirstOrder.HilbertProofᵢ.depth_gen"
        ]
      },
      {
        "file": "Foundation/FirstOrder/Hauptsatz.lean",
        "theorems": [
          "LO.FirstOrder.PositiveDerivationFrom.graft_isCutFree_of_isCutFree"
        ]
      },
      {
        "file": "Foundation/Modal/NNFormula.lean",
        "theorems": [
          "LO.Modal.NNFormula.toFormula_natom"
        ]
      },
      {
        "file": "Foundation/IntFO/Basic/Deduction.lean",
        "theorems": [
          "LO.FirstOrder.HilbertProofᵢ.depth_imply₂"
        ]
      },
      {
        "file": "Foundation/Modal/IntProp.lean",
        "theorems": [
          "LO.IntProp.Formula.toModalFormula.def_and"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/WeakerThan/KD5_KD45.lean",
        "theorems": [
          "LO.Modal.Hilbert.KD5_weakerThan_KD45"
        ]
      },
      {
        "file": "Foundation/FirstOrder/Hauptsatz.lean",
        "theorems": [
          "LO.FirstOrder.Derivation.isCutFree_ex_iff"
        ]
      },
      {
        "file": "Foundation/Modal/Kripke/Geach/Basic.lean",
        "theorems": [
          "LO.Modal.Kripke.SerialTransitiveFrameClass.is_geach"
        ]
      },
      {
        "file": "Foundation/IntFO/Basic/Deduction.lean",
        "theorems": [
          "LO.FirstOrder.HilbertProofᵢ.depth_rewrite"
        ]
      },
      {
        "file": "Foundation/IntFO/Basic/Deduction.lean",
        "theorems": [
          "LO.FirstOrder.HilbertProofᵢ.depth_verum"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/WeakerThan/K45_KB4.lean",
        "theorems": [
          "LO.Modal.Hilbert.K45_strictlyWeakerThan_KB4"
        ]
      },
      {
        "file": "Foundation/Modal/Kripke/Geach/Basic.lean",
        "theorems": [
          "LO.Modal.Kripke.SerialEuclideanFrameClass.is_geach"
        ]
      },
      {
        "file": "Foundation/Modal/IntProp.lean",
        "theorems": [
          "LO.IntProp.Formula.toModalFormula.def_top"
        ]
      },
      {
        "file": "Foundation/Modal/Kripke/Grz/Definability.lean",
        "theorems": [
          "LO.Modal.Kripke.ReflexiveTransitiveAntiSymmetricFiniteFrameClass.is_defined_by_Grz"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/WeakerThan/K4_K45.lean",
        "theorems": [
          "LO.Modal.Hilbert.K4_strictlyWeakerThan_K45"
        ]
      },
      {
        "file": "Foundation/Modal/Kripke/NNFormula.lean",
        "theorems": [
          "LO.Modal.NNFormula.Kripke.Satisfies.natom_def"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/GL_Independency.lean",
        "theorems": [
          "LO.Modal.Hilbert.GL.unprovable_independency"
        ]
      },
      {
        "file": "Foundation/IntFO/Translation.lean",
        "theorems": [
          "LO.FirstOrder.Sequent.neg_neg_eq"
        ]
      },
      {
        "file": "Foundation/IntFO/Basic/Deduction.lean",
        "theorems": [
          "LO.FirstOrder.HilbertProofᵢ.depth_or₁"
        ]
      },
      {
        "file": "Foundation/IntFO/Translation.lean",
        "theorems": [
          "LO.FirstOrder.Semiformula.substitute_doubleNegation"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/WeakerThan/K45_KB4.lean",
        "theorems": [
          "LO.Modal.Hilbert.K45_weakerThan_KB4"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/WeakerThan/KD5_KD45.lean",
        "theorems": [
          "LO.Modal.Hilbert.KD5_strictlyWeakerThan_KD45"
        ]
      },
      {
        "file": "Foundation/IntFO/Basic/Deduction.lean",
        "theorems": [
          "LO.FirstOrder.HilbertProofᵢ.depth_ex₂"
        ]
      },
      {
        "file": "Foundation/IntFO/Basic/Deduction.lean",
        "theorems": [
          "LO.FirstOrder.HilbertProofᵢ.depth_all₂"
        ]
      },
      {
        "file": "Foundation/FirstOrder/Hauptsatz.lean",
        "theorems": [
          "LO.FirstOrder.Derivation.isCutFree_and_iff"
        ]
      },
      {
        "file": "Foundation/Logic/HilbertStyle/Supplemental.lean",
        "theorems": [
          "LO.System.dne_or!"
        ]
      },
      {
        "file": "Foundation/Modal/Hilbert/GL_Independency.lean",
        "theorems": [
          "LO.Modal.Hilbert.GL.unprovable_notbox"
        ]
      }
    ],
    "HepLean": [
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/Basic.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.ι_commute_fieldOpFreeAlgebra_superCommuteF_ofCrAnOpF_ofCrAnOpF"
        ]
      },
      {
        "file": "HepLean/Lorentz/SL2C/SelfAdjoint.lean",
        "theorems": [
          "Lorentz.SL2C.toSelfAdjointMap_mul"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/Sign/Join.lean",
        "theorems": [
          "WickContraction.join_singleton_sign_right"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldStatistics/Basic.lean",
        "theorems": [
          "FieldStatistic.ofList_freeMonoid"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/UncontractedList.lean",
        "theorems": [
          "WickContraction.fin_list_sorted_indexOf_mem"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpFreeAlgebra/TimeOrder.lean",
        "theorems": [
          "FieldSpecification.FieldOpFreeAlgebra.timeOrderF_timeOrderF_left"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/InsertAndContract.lean",
        "theorems": [
          "WickContraction.insertAndContract_isSome_getDual?_self"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/NormalOrder/Basic.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.ι_normalOrderF_zero_of_mem_ideal"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/NormalOrder/Lemmas.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.normalOrder_ofFieldOpList_mul_anPart_swap"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpFreeAlgebra/Grading.lean",
        "theorems": [
          "FieldSpecification.FieldOpFreeAlgebra.bosonicProjF_of_fermionic_part"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/SuperCommute.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.superCommute_ofCrAnList_ofFieldOpList"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpFreeAlgebra/Basic.lean",
        "theorems": [
          "FieldSpecification.FieldOpFreeAlgebra.mulLinearMap_apply"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/Grading.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.fermionicProjFree_zero_of_ι_zero"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/NormalOrder/Lemmas.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.normalOrder_superCommute_eq_zero"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/SubContraction.lean",
        "theorems": [
          "WickContraction.quotContraction_fstFieldOfContract_uncontractedListEmd"
        ]
      },
      {
        "file": "HepLean/Mathematics/List/InsertIdx.lean",
        "theorems": [
          "HepLean.List.get_eq_insertIdx_succAbove"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/Join.lean",
        "theorems": [
          "WickContraction.join_fstFieldOfContract_joinLiftLeft"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/NormalOrder/Basic.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.ι_normalOrderF_superCommuteF_ofCrAnListF_ofCrAnListF_eq_zero_mul"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/TimeOrder.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.ι_timeOrderF_superCommuteF_neq_time"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/ExtractEquiv.lean",
        "theorems": [
          "WickContraction.extractEquiv_equiv"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/TimeOrder.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.ι_timeOrderF_zero_of_mem_ideal"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/Sign/Join.lean",
        "theorems": [
          "WickContraction.join_singleton_signFinset_eq_filter"
        ]
      },
      {
        "file": "HepLean/Mathematics/Fin/Involutions.lean",
        "theorems": [
          "HepLean.Fin.involutionAddEquiv_cast"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/Koszul/KoszulSign.lean",
        "theorems": [
          "Wick.koszulSign_perm_eq_append"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/SuperCommute.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.ofFieldOp_mul_ofFieldOp_eq_superCommute"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldSpecification/Filters.lean",
        "theorems": [
          "FieldSpecification.annihilateFilter_cons_create"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpFreeAlgebra/SuperCommute.lean",
        "theorems": [
          "FieldSpecification.FieldOpFreeAlgebra.superCommuteF_ofCrAnListF_ofCrAnListF"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpFreeAlgebra/NormTimeOrder.lean",
        "theorems": [
          "FieldSpecification.FieldOpFreeAlgebra.normTimeOrder_ofCrAnListF"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/SuperCommute.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.superCommute_ofCrAnList_ofFieldOpList_eq_sum"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/TimeCond.lean",
        "theorems": [
          "WickContraction.eqTimeContractSet_of_not_haveEqTime"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/TimeOrder.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.timeOrder_ofFieldOpList_singleton"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/Grading.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.fermionicProj_mem_bosonic"
        ]
      },
      {
        "file": "HepLean/Mathematics/Fin/Involutions.lean",
        "theorems": [
          "HepLean.Fin.involutionNoFixed_card_succ"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/Sign/InsertNone.lean",
        "theorems": [
          "WickContraction.signInsertNone_eq_filter_map"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpFreeAlgebra/NormalOrder.lean",
        "theorems": [
          "FieldSpecification.FieldOpFreeAlgebra.normalOrderF_superCommuteF_annihilate_create"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/Basic.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.fermionicProjF_mem_ideal"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/Basic.lean",
        "theorems": [
          "WickContraction.sndFieldOfContract_mem"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/Singleton.lean",
        "theorems": [
          "WickContraction.of_singleton_eq"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/NormalOrder/Lemmas.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.normalOrder_normalOrder_left"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpFreeAlgebra/SuperCommute.lean",
        "theorems": [
          "FieldSpecification.FieldOpFreeAlgebra.summerCommute_jacobi_ofCrAnListF"
        ]
      },
      {
        "file": "HepLean/Mathematics/Fin/Involutions.lean",
        "theorems": [
          "HepLean.Fin.involutionNoFixed_card_odd"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/SubContraction.lean",
        "theorems": [
          "WickContraction.mem_subContraction_or_quotContraction"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/UncontractedList.lean",
        "theorems": [
          "WickContraction.uncontractedList_getElem_uncontractedIndexEquiv_symm"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpAlgebra/Grading.lean",
        "theorems": [
          "FieldSpecification.FieldOpAlgebra.bosonicProj_bosonicProj_eq_bosonicProj"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/Koszul/KoszulSign.lean",
        "theorems": [
          "Wick.koszulSign_singleton"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/InsertAndContractNat.lean",
        "theorems": [
          "WickContraction.insertLift_injective"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/CreateAnnihilate.lean",
        "theorems": [
          "CreateAnnihilate.sum_eq"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldOpFreeAlgebra/SuperCommute.lean",
        "theorems": [
          "FieldSpecification.FieldOpFreeAlgebra.anPartF_mul_crPartF_eq_superCommuteF"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/FieldStatistics/Basic.lean",
        "theorems": [
          "FieldStatistic.ofList_append"
        ]
      },
      {
        "file": "HepLean/PerturbationTheory/WickContraction/UncontractedList.lean",
        "theorems": [
          "WickContraction.uncontractedListEmd_mem_uncontracted"
        ]
      }
    ],
    "Seymour": [
      {
        "file": "Seymour/ForMathlib/SetTheory.lean",
        "theorems": [
          "singleton_inter_subset_right"
        ]
      },
      {
        "file": "Seymour/ForMathlib/SetTheory.lean",
        "theorems": [
          "ssubset_disjoint_nonempty_union"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/SumDelta/CircuitForms.lean",
        "theorems": [
          "DeltaSumCircuitForm3.singleton_subset_inter"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/CircuitAxioms.lean",
        "theorems": [
          "CircuitPredicate.C3_strong_circuit_elim"
        ]
      },
      {
        "file": "Seymour/Matroid/Constructors/VectorMatroid.lean",
        "theorems": [
          "VectorMatroid.dual_exists_standardRepr"
        ]
      },
      {
        "file": "Seymour/ForMathlib/SetTheory.lean",
        "theorems": [
          "disjoint_of_singleton_inter_subset_left"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/Sum2/Basic.lean",
        "theorems": [
          "TwoSumCircuitType2.disjoint_inter"
        ]
      },
      {
        "file": "Seymour/Matroid/Constructors/VectorMatroid.lean",
        "theorems": [
          "StandardRepr.toVectorMatroid_A"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/Sum2/Basic.lean",
        "theorems": [
          "TwoSumAssumptions.build2sumCircuitMatroid_circuitPred"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/Sum2/Basic.lean",
        "theorems": [
          "TwoSumCircuitType1.disjoint_inter"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/Circuit.lean",
        "theorems": [
          "Matroid.Circuit.indep_diff_singleton"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/Circuit.lean",
        "theorems": [
          "Matroid.Circuit.not_ssubset_circuit"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/DisjointCircuitFamily.lean",
        "theorems": [
          "Matroid.IsUnionDisjointCircuits.dep_or_empty"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/CircuitAxioms.lean",
        "theorems": [
          "ValidFamily.mem_of_elem"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/Loop.lean",
        "theorems": [
          "Matroid.loop_iff_circuit"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/MatrixSums/BinaryMatroids.lean",
        "theorems": [
          "Matrix.indepCols_subset"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/IndepAxioms.lean",
        "theorems": [
          "Matroid.indepEmpty"
        ]
      },
      {
        "file": "Seymour/ForMathlib/SetTheory.lean",
        "theorems": [
          "sub_union_diff_sub_union"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/SumDelta/CircuitForms.lean",
        "theorems": [
          "DeltaSumCircuitForm3.disjoint_inter_M₁_M₂"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/Sum2/Basic.lean",
        "theorems": [
          "TwoSumCircuitType2.subset_M₂_diff_inter"
        ]
      },
      {
        "file": "Seymour/ForMathlib/SetTheory.lean",
        "theorems": [
          "disjoint_of_singleton_inter_left_wo"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/Connectivity.lean",
        "theorems": [
          "Matroid.singleton_separator_iff"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/IndepAxioms.lean",
        "theorems": [
          "Matroid.indepAug'"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/CircuitAxioms.lean",
        "theorems": [
          "CircuitPredicate.toIndepPredicate_indepEmpty"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/Sum2/Basic.lean",
        "theorems": [
          "TwoSumAssumptions.twoSumCircuitPred_notCircuitEmpty"
        ]
      },
      {
        "file": "Seymour/Basic.lean",
        "theorems": [
          "toUnion_toSum"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/Sum2/Basic.lean",
        "theorems": [
          "TwoSumCircuitType2.circuit_M₂"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/Circuit.lean",
        "theorems": [
          "Matroid.Circuit.nonempty"
        ]
      },
      {
        "file": "Seymour/ForMathlib/MatrixTU.lean",
        "theorems": [
          "Matrix.IsTotallyUnimodular.comp_cols"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/MatrixSums/Sum3.lean",
        "theorems": [
          "StandardRepresentation.Is3sumOf.interXX"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/SumDelta/CircuitForms.lean",
        "theorems": [
          "DeltaSumCircuitForm3.disjoint_inter_M₁_inter_M₂"
        ]
      },
      {
        "file": "Seymour/ForMathlib/SetTheory.lean",
        "theorems": [
          "set_union_union_eq_rev"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/SumDelta/CircuitForms.lean",
        "theorems": [
          "DeltaSumCircuitForm3.singleton_subset_M₁"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/Circuit.lean",
        "theorems": [
          "Matroid.ext_iff_circuit"
        ]
      },
      {
        "file": "Seymour/ForMathlib/SetTheory.lean",
        "theorems": [
          "diff_inter_disjoint_diff_inter"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/Sum2/Basic.lean",
        "theorems": [
          "TwoSumAssumptions.circuitType2_not_ssubset"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/Coloop.lean",
        "theorems": [
          "Matroid.coloop_iff_in_no_circuit"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/Sum2/Regularity.lean",
        "theorems": [
          "TwoSumAssumptions.decomposition_isRegular_both"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/Sum2/Basic.lean",
        "theorems": [
          "TwoSumAssumptions.inter_singleton_not_coloop_M₁"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/Circuit.lean",
        "theorems": [
          "Matroid.Circuit.ssubset_not_circuit"
        ]
      },
      {
        "file": "Seymour/Matroid/Classes/Graphic.lean",
        "theorems": [
          "Matroid.IsGraphic.isRegular"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/SumDelta/Basic.lean",
        "theorems": [
          "DeltaSumCircuitsAux.eq_symmDiff"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/MatrixSums/Sum3.lean",
        "theorems": [
          "StandardRepresentation.Is3sumOf.interYY"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/Sum2/Basic.lean",
        "theorems": [
          "TwoSumCircuitType2.subset_union"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/Sum2/Basic.lean",
        "theorems": [
          "TwoSumCircuitType3.disjoint_inter_M₂_inter"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/DisjointCircuitFamily.lean",
        "theorems": [
          "Matroid.emptyUnionDisjointCircuits"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/Sum2/Basic.lean",
        "theorems": [
          "TwoSumAssumptions.inter_singleton"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/Sum1/Regularity.lean",
        "theorems": [
          "Disjoint.decomposition_isRegular_both"
        ]
      },
      {
        "file": "Seymour/Matroid/Operations/SumDelta/Basic.lean",
        "theorems": [
          "DeltaSumCircuitsAux.udc_right"
        ]
      },
      {
        "file": "Seymour/Matroid/Notions/CircuitAxioms.lean",
        "theorems": [
          "CircuitPredicate.strong_circuit_elim_weak_circuit_elim"
        ]
      }
    ],
    "carleson": [
      {
        "file": "Carleson/Discrete/ForestUnion.lean",
        "theorems": [
          "C6_forest'"
        ]
      },
      {
        "file": "Carleson/Defs.lean",
        "theorems": [
          "le_upperRadius"
        ]
      },
      {
        "file": "Carleson/Classical/HilbertStrongType.lean",
        "theorems": [
          "mean_zero_oscillation"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Annulus.lean",
        "theorems": [
          "Set.EAnnulus.co_subset_oo"
        ]
      },
      {
        "file": "Carleson/ForestOperator/PointwiseEstimate.lean",
        "theorems": [
          "TileStructure.Forest.L7_1_4_integrand_bound"
        ]
      },
      {
        "file": "Carleson/ForestOperator/PointwiseEstimate.lean",
        "theorems": [
          "TileStructure.Forest.approxOnCube_apply"
        ]
      },
      {
        "file": "Carleson/Discrete/ForestUnion.lean",
        "theorems": [
          "C5_1_2_optimized_le'"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Annulus.lean",
        "theorems": [
          "Set.EAnnulus.co_union_ci"
        ]
      },
      {
        "file": "Carleson/ForestOperator/PointwiseEstimate.lean",
        "theorems": [
          "TileStructure.Forest.subset_of_mem_𝓛"
        ]
      },
      {
        "file": "Carleson/ToMathlib/WeakType.lean",
        "theorems": [
          "MeasureTheory.toReal_ofReal_preimage'"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Misc.lean",
        "theorems": [
          "MeasureTheory.setIntegral_biUnion_le_sum_setIntegral"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Annulus.lean",
        "theorems": [
          "Set.EAnnulus.oo_eq_empty"
        ]
      },
      {
        "file": "Carleson/ForestOperator/PointwiseEstimate.lean",
        "theorems": [
          "TileStructure.Forest.exp_sub_one_le"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Annulus.lean",
        "theorems": [
          "Set.Annulus.co_subset_co"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Annulus.lean",
        "theorems": [
          "Set.EAnnulus.oc_union_oo"
        ]
      },
      {
        "file": "Carleson/ToMathlib/RealInterpolation.lean",
        "theorems": [
          "MeasureTheory.AESubadditiveOn.zero"
        ]
      },
      {
        "file": "Carleson/ToMathlib/BoundedCompactSupport.lean",
        "theorems": [
          "MeasureTheory.BoundedCompactSupport.isBoundedSupport'"
        ]
      },
      {
        "file": "Carleson/Psi.lean",
        "theorems": [
          "ennnorm_K_le"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Annulus.lean",
        "theorems": [
          "Set.EAnnulus.oc_subset_co"
        ]
      },
      {
        "file": "Carleson/ForestOperator/PointwiseEstimate.lean",
        "theorems": [
          "TileStructure.Forest.L7_1_6_integral_le"
        ]
      },
      {
        "file": "Carleson/ToMathlib/HardyLittlewood.lean",
        "theorems": [
          "MB_ae_ne_top"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Annulus.lean",
        "theorems": [
          "Set.Annulus.cc_subset_oo"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Annulus.lean",
        "theorems": [
          "Set.EAnnulus.measurableSet_co"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Annulus.lean",
        "theorems": [
          "Set.Annulus.oo_eq"
        ]
      },
      {
        "file": "Carleson/ToMathlib/BoundedCompactSupport.lean",
        "theorems": [
          "MeasureTheory.isBounded_range_iff_forall_norm_le"
        ]
      },
      {
        "file": "Carleson/ToMathlib/WeakType.lean",
        "theorems": [
          "MeasureTheory.distribution_toReal_eq"
        ]
      },
      {
        "file": "Carleson/ForestOperator/PointwiseEstimate.lean",
        "theorems": [
          "TileStructure.Forest.exists_p_of_mem_σ"
        ]
      },
      {
        "file": "Carleson/Discrete/ForestComplement.lean",
        "theorems": [
          "lintegral_carlesonSum_𝔓₁_compl_le_sum_aux1"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Annulus.lean",
        "theorems": [
          "Set.Annulus.oc_eq"
        ]
      },
      {
        "file": "Carleson/ToMathlib/WeakType.lean",
        "theorems": [
          "MeasureTheory.HasWeakType.memWℒp"
        ]
      },
      {
        "file": "Carleson/Defs.lean",
        "theorems": [
          "inv_q_sub_half_nonneg"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Annulus.lean",
        "theorems": [
          "Set.EAnnulus.measurableSet_ci"
        ]
      },
      {
        "file": "Carleson/Psi.lean",
        "theorems": [
          "support_ψS_subset_Icc"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Annulus.lean",
        "theorems": [
          "Set.EAnnulus.ci_eq_annulus"
        ]
      },
      {
        "file": "Carleson/Discrete/ForestComplement.lean",
        "theorems": [
          "carlesonSum_𝔓pos_inter_ℭ₁_eq_add_sum"
        ]
      },
      {
        "file": "Carleson/ToMathlib/RealInterpolation.lean",
        "theorems": [
          "MeasureTheory.AESublinearOn.biSup2"
        ]
      },
      {
        "file": "Carleson/Defs.lean",
        "theorems": [
          "volume_G_lt_top"
        ]
      },
      {
        "file": "Carleson/ForestOperator/PointwiseEstimate.lean",
        "theorems": [
          "TileStructure.Forest.ball_covered_by_𝓙"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Annulus.lean",
        "theorems": [
          "Set.EAnnulus.co_subset_oc"
        ]
      },
      {
        "file": "Carleson/ForestOperator/L2Estimate.lean",
        "theorems": [
          "TileStructure.Forest.nontangential_pointwise_bound"
        ]
      },
      {
        "file": "Carleson/Discrete/ForestComplement.lean",
        "theorems": [
          "carlesonSum_𝔓pos_inter_ℭ_eq_add_sum"
        ]
      },
      {
        "file": "Carleson/GridStructure.lean",
        "theorems": [
          "Grid.scale_succ"
        ]
      },
      {
        "file": "Carleson/ToMathlib/BoundedCompactSupport.lean",
        "theorems": [
          "MeasureTheory.BoundedCompactSupport.finset_sum"
        ]
      },
      {
        "file": "Carleson/Discrete/ForestUnion.lean",
        "theorems": [
          "forest_union_sum_aux1"
        ]
      },
      {
        "file": "Carleson/ForestOperator/Forests.lean",
        "theorems": [
          "forest_operator'"
        ]
      },
      {
        "file": "Carleson/ForestOperator/PointwiseEstimate.lean",
        "theorems": [
          "TileStructure.Forest.norm_approxOnCube_le_approxOnCube_norm"
        ]
      },
      {
        "file": "Carleson/ToMathlib/WeakType.lean",
        "theorems": [
          "MeasureTheory.distribution_add_le_of_enorm"
        ]
      },
      {
        "file": "Carleson/ToMathlib/Annulus.lean",
        "theorems": [
          "Set.EAnnulus.oo_subset_oi"
        ]
      },
      {
        "file": "Carleson/ToMathlib/WeakType.lean",
        "theorems": [
          "eLpNorm_toReal_le"
        ]
      },
      {
        "file": "Carleson/ForestOperator/L2Estimate.lean",
        "theorems": [
          "TileStructure.Forest.boundedCompactSupport_eI𝒬u_mul"
        ]
      }
    ],
    "ConNF": [
      {
        "file": "ConNF/Model/Result.lean",
        "theorems": [
          "ConNF.singletonImage'_spec"
        ]
      },
      {
        "file": "ConNF/External/Basic.lean",
        "theorems": [
          "ConNF.mem_powerset_iff"
        ]
      },
      {
        "file": "ConNF/Model/Hailperin.lean",
        "theorems": [
          "ConNF.TSet.exists_up"
        ]
      },
      {
        "file": "ConNF/External/Basic.lean",
        "theorems": [
          "ConNF.exists_smallUnion"
        ]
      },
      {
        "file": "ConNF/External/WellOrder.lean",
        "theorems": [
          "ConNF.supports_of_supports_singletons"
        ]
      },
      {
        "file": "ConNF/Levels/Path.lean",
        "theorems": [
          "ConNF.Path.coderiv_deriv'"
        ]
      },
      {
        "file": "ConNF/Model/TTT.lean",
        "theorems": [
          "ConNF.TSet.mem_smul_iff'"
        ]
      },
      {
        "file": "ConNF/Model/TTT.lean",
        "theorems": [
          "ConNF.TSet.exists_of_symmetric"
        ]
      },
      {
        "file": "ConNF/External/Basic.lean",
        "theorems": [
          "ConNF.mem_singletonUnion_iff"
        ]
      },
      {
        "file": "ConNF/Model/Hailperin.lean",
        "theorems": [
          "ConNF.TSet.exists_singletonImage"
        ]
      },
      {
        "file": "ConNF/External/Basic.lean",
        "theorems": [
          "ConNF.tSet_nonempty"
        ]
      },
      {
        "file": "ConNF/Model/TTT.lean",
        "theorems": [
          "ConNF.allPermEquiv_sderiv"
        ]
      },
      {
        "file": "ConNF/External/Basic.lean",
        "theorems": [
          "ConNF.externalRel_converse"
        ]
      },
      {
        "file": "ConNF/ModelData/Support.lean",
        "theorems": [
          "ConNF.Support.derivBot_atoms"
        ]
      },
      {
        "file": "ConNF/Model/RaiseStrong.lean",
        "theorems": [
          "ConNF.Support.sameSpecLe_of_fixes"
        ]
      },
      {
        "file": "ConNF/Model/TTT.lean",
        "theorems": [
          "ConNF.tSet_ext'"
        ]
      },
      {
        "file": "ConNF/Model/RaiseStrong.lean",
        "theorems": [
          "ConNF.Support.raise_preStrong'"
        ]
      },
      {
        "file": "ConNF/External/Basic.lean",
        "theorems": [
          "ConNF.mem_union_iff"
        ]
      },
      {
        "file": "ConNF/Model/Hailperin.lean",
        "theorems": [
          "ConNF.TSet.op_eq_singleton_iff"
        ]
      },
      {
        "file": "ConNF/Model/Hailperin.lean",
        "theorems": [
          "ConNF.TSet.exists_compl"
        ]
      },
      {
        "file": "ConNF/Model/Externalise.lean",
        "theorems": [
          "ConNF.globalLeData_eq"
        ]
      },
      {
        "file": "ConNF/ModelData/Support.lean",
        "theorems": [
          "ConNF.Support.scoderiv_deriv_eq"
        ]
      },
      {
        "file": "ConNF/Levels/Path.lean",
        "theorems": [
          "ConNF.Path.botDeriv_scoderiv"
        ]
      },
      {
        "file": "ConNF/Model/TTT.lean",
        "theorems": [
          "ConNF.sUnion_singleton_symmetric_aux"
        ]
      },
      {
        "file": "ConNF/ModelData/PathEnumeration.lean",
        "theorems": [
          "ConNF.Enumeration.eq_of_scoderiv_mem"
        ]
      },
      {
        "file": "ConNF/ModelData/Support.lean",
        "theorems": [
          "ConNF.Support.eq_of_nearLitter_mem_scoderiv_botDeriv"
        ]
      },
      {
        "file": "ConNF/Model/RaiseStrong.lean",
        "theorems": [
          "ConNF.Support.raise_closed'"
        ]
      },
      {
        "file": "ConNF/External/Basic.lean",
        "theorems": [
          "ConNF.mem_univ_iff"
        ]
      },
      {
        "file": "ConNF/Model/Hailperin.lean",
        "theorems": [
          "ConNF.TSet.exists_inter"
        ]
      },
      {
        "file": "ConNF/External/WellOrder.lean",
        "theorems": [
          "ConNF.powerset_internallyWellOrdered"
        ]
      },
      {
        "file": "ConNF/External/Basic.lean",
        "theorems": [
          "ConNF.mem_cross_iff"
        ]
      },
      {
        "file": "ConNF/Model/TTT.lean",
        "theorems": [
          "ConNF.allPermEquiv_forget"
        ]
      },
      {
        "file": "ConNF/ModelData/Support.lean",
        "theorems": [
          "ConNF.Support.sderiv_nearLitters"
        ]
      },
      {
        "file": "ConNF/Strong/Strong.lean",
        "theorems": [
          "ConNF.Support.PreStrong.add"
        ]
      },
      {
        "file": "ConNF/Model/Hailperin.lean",
        "theorems": [
          "ConNF.TSet.exists_cross"
        ]
      },
      {
        "file": "ConNF/Model/TTT.lean",
        "theorems": [
          "ConNF.allPerm_deriv_nil'"
        ]
      },
      {
        "file": "ConNF/External/Basic.lean",
        "theorems": [
          "ConNF.mem_orderedPairs_iff"
        ]
      },
      {
        "file": "ConNF/ModelData/Support.lean",
        "theorems": [
          "ConNF.Support.scoderiv_botDeriv_eq"
        ]
      },
      {
        "file": "ConNF/Model/RaiseStrong.lean",
        "theorems": [
          "ConNF.Support.litter_eq_of_flexible_of_fixes"
        ]
      },
      {
        "file": "ConNF/ModelData/Support.lean",
        "theorems": [
          "ConNF.Support.sderiv_atoms"
        ]
      },
      {
        "file": "ConNF/Model/Hailperin.lean",
        "theorems": [
          "ConNF.TSet.exists_typeLower"
        ]
      },
      {
        "file": "ConNF/Model/TTT.lean",
        "theorems": [
          "ConNF.allPerm_deriv_sderiv'"
        ]
      },
      {
        "file": "ConNF/Model/TTT.lean",
        "theorems": [
          "ConNF.typedMem_singleton_iff'"
        ]
      },
      {
        "file": "ConNF/Model/Result.lean",
        "theorems": [
          "ConNF.insertion3'_spec"
        ]
      },
      {
        "file": "ConNF/External/WellOrder.lean",
        "theorems": [
          "ConNF.internallyWellOrdered_of_common_support_of_nontrivial"
        ]
      },
      {
        "file": "ConNF/ModelData/Support.lean",
        "theorems": [
          "ConNF.Support.eq_of_atom_mem_scoderiv_botDeriv"
        ]
      },
      {
        "file": "ConNF/External/WellOrder.lean",
        "theorems": [
          "ConNF.apply_eq_of_isWellOrder"
        ]
      },
      {
        "file": "ConNF/Model/Externalise.lean",
        "theorems": [
          "ConNF.globalLtData_eq"
        ]
      },
      {
        "file": "ConNF/Model/Hailperin.lean",
        "theorems": [
          "ConNF.TSet.exists_subset"
        ]
      },
      {
        "file": "ConNF/External/WellOrder.lean",
        "theorems": [
          "ConNF.externalRel_smul"
        ]
      }
    ],
    "mathlib": [
      {
        "file": "Mathlib/NumberTheory/Padics/PadicIntegers.lean",
        "theorems": [
          "PadicInt.valuation_coe_nonneg"
        ]
      },
      {
        "file": "Mathlib/LinearAlgebra/Matrix/Determinant/Basic.lean",
        "theorems": [
          "Matrix.det_updateCol_eq_zero"
        ]
      },
      {
        "file": "Mathlib/Algebra/Module/ZLattice/Covolume.lean",
        "theorems": [
          "ZLattice.covolume.frontier_equivFun"
        ]
      },
      {
        "file": "Mathlib/Algebra/Homology/Embedding/ExtendHomology.lean",
        "theorems": [
          "HomologicalComplex.extendHomologyIso_hom_naturality"
        ]
      },
      {
        "file": "Mathlib/Analysis/SpecialFunctions/Pow/Deriv.lean",
        "theorems": [
          "Complex.deriv_cpow_const"
        ]
      },
      {
        "file": "Mathlib/Analysis/Convex/StrictConvexSpace.lean",
        "theorems": [
          "StrictConvexSpace.of_strictConvex_unitClosedBall"
        ]
      },
      {
        "file": "Mathlib/Algebra/Order/Ring/Canonical.lean",
        "theorems": [
          "CanonicallyOrderedAdd.pow_pos"
        ]
      },
      {
        "file": "Mathlib/NumberTheory/Padics/PadicIntegers.lean",
        "theorems": [
          "PadicInt.valuation_mul"
        ]
      },
      {
        "file": "Mathlib/LinearAlgebra/Matrix/Determinant/Basic.lean",
        "theorems": [
          "Matrix.det_eq_detp_sub_detp"
        ]
      },
      {
        "file": "Mathlib/RingTheory/Polynomial/HilbertPoly.lean",
        "theorems": [
          "Polynomial.natDegree_hilbertPoly_of_ne_zero"
        ]
      },
      {
        "file": "Mathlib/Algebra/Homology/Embedding/ExtendHomology.lean",
        "theorems": [
          "HomologicalComplex.pOpcycles_extendOpcyclesIso_inv"
        ]
      },
      {
        "file": "Mathlib/Data/List/ReduceOption.lean",
        "theorems": [
          "List.reduceOption_eq_singleton_iff"
        ]
      },
      {
        "file": "Mathlib/Geometry/Manifold/Algebra/SmoothFunctions.lean",
        "theorems": [
          "ContMDiffMap.coe_one"
        ]
      },
      {
        "file": "Mathlib/Data/Set/Pairwise/Lattice.lean",
        "theorems": [
          "Set.pairwiseDisjoint_iff"
        ]
      },
      {
        "file": "Mathlib/Algebra/Order/Ring/Canonical.lean",
        "theorems": [
          "CanonicallyOrderedAdd.mul_pos"
        ]
      },
      {
        "file": "Mathlib/RingTheory/Polynomial/HilbertPoly.lean",
        "theorems": [
          "Polynomial.hilbertPoly_succ"
        ]
      },
      {
        "file": "Mathlib/Algebra/Homology/Embedding/ExtendHomology.lean",
        "theorems": [
          "HomologicalComplex.extendHomologyIso_inv_homologyι"
        ]
      },
      {
        "file": "Mathlib/Order/Atoms.lean",
        "theorems": [
          "SetLike.isCoatom_iff"
        ]
      },
      {
        "file": "Mathlib/RingTheory/Polynomial/HilbertPoly.lean",
        "theorems": [
          "Polynomial.hilbertPoly_eq_zero_of_le_rootMultiplicity_one"
        ]
      },
      {
        "file": "Mathlib/Data/Set/Pairwise/Lattice.lean",
        "theorems": [
          "Set.pairwiseDisjoint_pair_insert"
        ]
      },
      {
        "file": "Mathlib/Algebra/Module/CharacterModule.lean",
        "theorems": [
          "CharacterModule.dual_injective_iff_surjective"
        ]
      },
      {
        "file": "Mathlib/Algebra/Module/ZLattice/Covolume.lean",
        "theorems": [
          "ZLattice.covolume.tendsto_card_le_div"
        ]
      },
      {
        "file": "Mathlib/RingTheory/Valuation/Basic.lean",
        "theorems": [
          "AddValuation.ofValuation_symm_eq"
        ]
      },
      {
        "file": "Mathlib/NumberTheory/Padics/PadicIntegers.lean",
        "theorems": [
          "PadicInt.norm_eq_zpow_neg_valuation"
        ]
      },
      {
        "file": "Mathlib/RingTheory/Polynomial/HilbertPoly.lean",
        "theorems": [
          "Polynomial.existsUnique_hilbertPoly"
        ]
      },
      {
        "file": "Mathlib/Algebra/Homology/Embedding/ExtendHomology.lean",
        "theorems": [
          "HomologicalComplex.quasiIso_extendMap_iff"
        ]
      },
      {
        "file": "Mathlib/RingTheory/Valuation/Basic.lean",
        "theorems": [
          "Valuation.ofAddValuation_apply"
        ]
      },
      {
        "file": "Mathlib/Analysis/SpecialFunctions/Pow/Deriv.lean",
        "theorems": [
          "isTheta_deriv_ofReal_cpow_const_atTop"
        ]
      },
      {
        "file": "Mathlib/Algebra/Homology/Embedding/Boundary.lean",
        "theorems": [
          "ComplexShape.Embedding.op_boundaryLE_iff"
        ]
      },
      {
        "file": "Mathlib/Order/Atoms.lean",
        "theorems": [
          "SetLike.covBy_iff"
        ]
      },
      {
        "file": "Mathlib/RingTheory/PowerSeries/WellKnown.lean",
        "theorems": [
          "PowerSeries.invOneSubPow_inv_zero_eq_one"
        ]
      },
      {
        "file": "Mathlib/LinearAlgebra/Matrix/Determinant/Basic.lean",
        "theorems": [
          "Matrix.det_updateCol_sum"
        ]
      },
      {
        "file": "Mathlib/RingTheory/Etale/Field.lean",
        "theorems": [
          "Algebra.Etale.iff_exists_algEquiv_prod"
        ]
      },
      {
        "file": "Mathlib/Algebra/Module/ZLattice/Covolume.lean",
        "theorems": [
          "ZLattice.covolume.tendsto_card_le_div''"
        ]
      },
      {
        "file": "Mathlib/RingTheory/Valuation/Basic.lean",
        "theorems": [
          "Valuation.ofAddValuation_toAddValuation"
        ]
      },
      {
        "file": "Mathlib/RingTheory/PowerSeries/WellKnown.lean",
        "theorems": [
          "PowerSeries.one_sub_pow_add_mul_invOneSubPow_val_eq_one_sub_pow"
        ]
      },
      {
        "file": "Mathlib/Algebra/Homology/Embedding/ExtendHomology.lean",
        "theorems": [
          "HomologicalComplex.homologyπ_extendHomologyIso_inv"
        ]
      },
      {
        "file": "Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "theorems": [
          "IsApproximateSubgroup.pow_inter_pow_covBySMul_sq_inter_sq"
        ]
      },
      {
        "file": "Mathlib/NumberTheory/Padics/PadicIntegers.lean",
        "theorems": [
          "PadicInt.valuation_pow"
        ]
      },
      {
        "file": "Mathlib/Analysis/SpecialFunctions/Pow/Deriv.lean",
        "theorems": [
          "hasDerivAt_ofReal_cpow_const'"
        ]
      },
      {
        "file": "Mathlib/Algebra/Homology/Embedding/ExtendHomology.lean",
        "theorems": [
          "HomologicalComplex.extend_exactAt"
        ]
      },
      {
        "file": "Mathlib/RingTheory/PowerSeries/WellKnown.lean",
        "theorems": [
          "PowerSeries.invOneSubPow_add"
        ]
      },
      {
        "file": "Mathlib/Algebra/Homology/Embedding/Boundary.lean",
        "theorems": [
          "ComplexShape.Embedding.op_boundaryGE_iff"
        ]
      },
      {
        "file": "Mathlib/RingTheory/Valuation/Basic.lean",
        "theorems": [
          "AddValuation.ofValuation_toValuation"
        ]
      },
      {
        "file": "Mathlib/RingTheory/Polynomial/HilbertPoly.lean",
        "theorems": [
          "Polynomial.hilbertPoly_zero_right"
        ]
      },
      {
        "file": "Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "theorems": [
          "IsApproximateSubgroup.card_mul_self_le"
        ]
      },
      {
        "file": "Mathlib/Analysis/SpecialFunctions/Pow/Deriv.lean",
        "theorems": [
          "hasDerivAt_ofReal_cpow_const"
        ]
      },
      {
        "file": "Mathlib/Algebra/Homology/Embedding/ExtendHomology.lean",
        "theorems": [
          "HomologicalComplex.extend_exactAt_iff"
        ]
      },
      {
        "file": "Mathlib/Analysis/SpecialFunctions/Pow/Deriv.lean",
        "theorems": [
          "deriv_norm_ofReal_cpow"
        ]
      },
      {
        "file": "Mathlib/RingTheory/Polynomial/HilbertPoly.lean",
        "theorems": [
          "Polynomial.eq_hilbertPoly_of_forall_coeff_eq_eval"
        ]
      }
    ]
  }
}